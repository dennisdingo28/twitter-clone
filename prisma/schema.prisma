generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                 String      @id @default(uuid())
  username           String      @unique
  email              String      @unique
  password           String?
  imageUrl           String      @default("/defaultProfile.png")
  headerProfileImage String      @default("")
  bio                String      @default("")
  occupation         String      @default("")
  location           String      @default("")
  website            String      @default("")
  tweets             Tweet[]
  comments           Comment[]
  following          Following[] @relation("FollowerUser")
  followers          Following[] @relation("FollowingUser")
}

model Following {
  id String @id @default(uuid())

  userId String
  user   User   @relation("FollowerUser", fields: [userId], references: [id])

  followingUserId String
  followingUser   User   @relation("FollowingUser", fields: [followingUserId], references: [id])

  @@index([userId])
  @@index([followingUserId])
}

model Tweet {
  id               String    @id @default(uuid())
  userId           String
  tweetDescription String
  uploadUrl        String
  likes            String[]
  createdAt        DateTime  @default(now())
  user             User?     @relation(fields: [userId], references: [id])
  comments         Comment[]
  visits           String[]

  @@index([userId])
}

model Comment {
  id        String  @id @default(uuid())
  tweetId   String
  userId    String
  comment   String
  uploadUrl String?
  tweet     Tweet   @relation(fields: [tweetId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@index([tweetId])
  @@index([userId])
}